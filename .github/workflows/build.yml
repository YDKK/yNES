name: Build

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: Build Windows frontend
      working-directory: ./src/win
      run: cargo build --release
    - name: Create zip archive
      working-directory: ./src/win/target/release
      run: powershell Compress-Archive -Path y_nes_win.exe,SDL2.dll -DestinationPath yNES-windows-${{github.ref_name}}.zip
    - name: Upload build artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        path: ./src/win/target/release/yNES-windows-${{github.ref_name}}.zip
        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error
    - name: Get the upload URL for a release
      id: get_release
      uses: bruceadams/get-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./src/win/target/release/yNES-windows-build-${{github.ref_name}}.zip
        asset_name: yNES-windows-build-${{github.ref_name}}.zip
        asset_content_type: application/zip

  build-wasm:
    runs-on: ubuntu-latest
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - name: install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    - name: Build wasm
      working-directory: ./src/wasm
      run: wasm-pack build --release --target web
    - name: Pack artifact
      working-directory: ./src/wasm
      run: |
        mkdir artifact
        cp -r index.html *.js pkg artifact
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: './src/wasm/artifact'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
